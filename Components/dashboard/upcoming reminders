import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { format, differenceInDays } from "date-fns";
import { Bell, Calendar } from "lucide-react";
import { motion } from "framer-motion";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { Button } from '@/components/ui/button';

export default function UpcomingReminders({ reminders }) {
  const pendingReminders = reminders
    .filter(r => r.status === 'pending')
    .sort((a, b) => new Date(a.due_date) - new Date(b.due_date))
    .slice(0, 4);

  const getUrgency = (dueDate) => {
    const daysLeft = differenceInDays(new Date(dueDate), new Date());
    if (daysLeft < 0) return { label: 'Overdue', color: 'bg-red-500 text-white' };
    if (daysLeft <= 7) return { label: `${daysLeft}d left`, color: 'bg-red-100 text-red-800' };
    if (daysLeft <= 30) return { label: `${daysLeft}d left`, color: 'bg-orange-100 text-orange-800' };
    return { label: `in ${daysLeft}d`, color: 'bg-blue-100 text-blue-800' };
  };

  return (
    <Card className="bg-white/80 backdrop-blur-sm border-slate-200">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-slate-900">
          <Bell className="w-5 h-5 text-orange-500" />
          Upcoming Reminders
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        {pendingReminders.length === 0 ? (
          <div className="text-center py-8 text-slate-500">
            <Bell className="w-12 h-12 mx-auto mb-4 text-slate-300" />
            <p>No pending reminders</p>
            <Link to={createPageUrl("Reminders")}>
              <Button variant="link" className="text-sm">Add a reminder</Button>
            </Link>
          </div>
        ) : (
          pendingReminders.map((reminder, index) => (
            <motion.div
              key={reminder.id}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: index * 0.1 }}
              className="flex items-center gap-4 p-4 rounded-xl bg-slate-50/50 hover:bg-slate-100/50 transition-colors duration-200"
            >
              <div className="flex-1 min-w-0">
                <p className="font-medium text-slate-900 truncate">{reminder.title}</p>
                <p className="text-sm text-slate-600 flex items-center gap-1">
                  <Calendar className="w-3 h-3" />
                  {format(new Date(reminder.due_date), 'MMM d, yyyy')}
                </p>
              </div>
              <Badge className={getUrgency(reminder.due_date).color}>
                {getUrgency(reminder.due_date).label}
              </Badge>
            </motion.div>
          ))
        )}
      </CardContent>
    </Card>
  );
}